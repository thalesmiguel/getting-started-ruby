box:
  id: ruby:latest
  ports:
    - "8080"

dev:
  steps:
    - bundle-install
    - internal/watch:
        code: |
          bundle exec thin -R config.ru -p 8080 start
        reload: true
build:
  steps:
    - bundle-install
    - script:
        name: rspec
        code: bundle exec rspec
push-to-releases:
  steps:
    # Push to public docker repo Container Registry (CR)
    - internal/docker-push:
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        cmd: ruby main.rb
deploy-to-oke:
  box:
    id: alpine
    cmd: /bin/sh
  steps:
    - bash-template

    - script:
        name: "Visualise Kubernetes config"
        code: cat kubernetes-deployment.yml

    - kubectl:
        name: create namespace
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_ROOT/kubernetes-namespace.yml

    - script:
        name: wait to create namespace
        code: sleep 10

    - kubectl:
        name: create OCR secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create secret docker-registry wrelease --docker-server=wcr.io --docker-username=$WERCKER_APPLICATION_OWNER_NAME --docker-password=$KUBERNETES_TOKEN --docker-email=${WERCKER_APPLICATION_OWNER_NAME}@mail.com --namespace=$WERCKER_APPLICATION_OWNER_NAME; echo 'secret step'

    - kubectl:
        name: create deplyoment
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_ROOT/kubernetes-deployment.yml --namespace=$WERCKER_APPLICATION_OWNER_NAME
